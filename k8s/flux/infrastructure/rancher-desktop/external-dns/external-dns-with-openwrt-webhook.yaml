# skaffold render -f skaffold-router3.yaml --images external-dns-openwrt-webhook --output rendered-manifests-do-not-commit.yaml --digest-source local
# https://github.com/poutinedevicto/external-dns-openwrt-webhook
# plus certaines modifs (namespace - private stuff)
# 
# external-dns with openwrt webhook running as a sidecar - deployment has 2 containers 
apiVersion: v1
automountServiceAccountToken: null
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/instance: external-dns
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: external-dns
    app.kubernetes.io/version: 0.15.1
    helm.sh/chart: external-dns-1.15.2
  name: external-dns
  namespace: locavora-infra
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/instance: external-dns
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: external-dns
    app.kubernetes.io/version: 0.15.1
    helm.sh/chart: external-dns-1.15.2
  name: external-dns
rules:
  - apiGroups:
      - ""
    resources:
      - nodes
    verbs:
      - list
      - watch
  - apiGroups:
      - ""
    resources:
      - pods
    verbs:
      - get
      - watch
      - list
  - apiGroups:
      - ""
    resources:
      - services
      - endpoints
    verbs:
      - get
      - watch
      - list
  - apiGroups:
      - extensions
      - networking.k8s.io
    resources:
      - ingresses
    verbs:
      - get
      - watch
      - list
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/instance: external-dns
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: external-dns
    app.kubernetes.io/version: 0.15.1
    helm.sh/chart: external-dns-1.15.2
  name: external-dns-viewer
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: external-dns
subjects:
  - kind: ServiceAccount
    name: external-dns
    namespace: locavora-infra
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/instance: external-dns
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: external-dns
    app.kubernetes.io/version: 0.15.1
    helm.sh/chart: external-dns-1.15.2
  name: external-dns
  namespace: locavora-infra
spec:
  ports:
    - name: http
      port: 7979
      protocol: TCP
      targetPort: http
    - name: http-webhook
      port: 8080
      protocol: TCP
      targetPort: http-webhook
  selector:
    app.kubernetes.io/instance: external-dns
    app.kubernetes.io/name: external-dns
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/instance: external-dns
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: external-dns
    app.kubernetes.io/version: 0.15.1
    helm.sh/chart: external-dns-1.15.2
  name: external-dns
  namespace: locavora-infra
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/instance: external-dns
      app.kubernetes.io/name: external-dns
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app.kubernetes.io/instance: external-dns
        app.kubernetes.io/name: external-dns
    spec:
      containers:
        - args:
            - --log-level=info
            - --log-format=text
            - --interval=1m
            - --source=service
            - --source=ingress
            - --policy=upsert-only
            - --registry=txt
            - --provider=webhook
          image: registry.k8s.io/external-dns/external-dns:v0.15.1
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 2
            httpGet:
              path: /healthz
              port: http
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          name: external-dns
          ports:
            - containerPort: 7979
              name: http
              protocol: TCP
          readinessProbe:
            failureThreshold: 6
            httpGet:
              path: /healthz
              port: http
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
            privileged: false
            readOnlyRootFilesystem: true
            runAsGroup: 65532
            runAsNonRoot: true
            runAsUser: 65532
        # 2e container: the webhook sidecar
        - image: renanqts/external-dns-openwrt-webhook:v0.1.0
          imagePullPolicy: IfNotPresent
          # LOCAVORA see kustomization.yaml for the generation of the configMap
          envFrom:
          - configMapRef:
              name: external-dns-webhook-env
          # LOCAVORA - permet de donner une valeur locale à partir de la configMap
          #            external-dns-webhook-env-custom à définir à 
          #            ** l'extérieur ** de GIT
          #            les env ont précédence sur envFrom 
          env:
          - name: PROVIDER_OPENWRT_LUCIRPC_HOSTNAME
            # Attention valeur HOSTNAME doit être quoted si numeric IP
            valueFrom:
              configMapKeyRef:
                name: external-dns-webhook-env-custom
                key: PROVIDER_OPENWRT_LUCIRPC_HOSTNAME
                optional: true # Allow pod to start even if configmap is missing or key is not present
          - name: PROVIDER_OPENWRT_LUCIRPC_AUTH_USERNAME
            valueFrom:
              configMapKeyRef:
                name: external-dns-webhook-env-custom
                key: PROVIDER_OPENWRT_LUCIRPC_AUTH_USERNAME
                optional: true
          - name: PROVIDER_OPENWRT_LUCIRPC_AUTH_PASSWORD
            valueFrom:
              configMapKeyRef:
                name: external-dns-webhook-env-custom
                key: PROVIDER_OPENWRT_LUCIRPC_AUTH_PASSWORD
                optional: true
          livenessProbe:
            failureThreshold: 2
            httpGet:
              path: /ping
              port: 8888
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          name: webhook
          ports:
            - containerPort: 8080
              name: http-webhook
              protocol: TCP
          readinessProbe:
            failureThreshold: 6
            httpGet:
              path: /ping
              port: 8888
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
      securityContext:
        fsGroup: 65534
        runAsNonRoot: true
        seccompProfile:
          type: RuntimeDefault
      serviceAccountName: external-dns
